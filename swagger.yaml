openapi: 3.0.0
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/project-narwhal/project-narwhal/1.0.0
info:
  description: This is a simple API
  version: "1.0.0"
  title: Universal QR Code API
  contact:
    email: you@your-company.com
  license:
    name: Apache 2.0
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
tags:
  - name: collection
    description: Information and updating of collections
  - name: item
    description: Information and updating of individual items
paths:
  /collection/{id}:
    get:
      tags:
        - collection
      summary: get info about a collection
      operationId: getCollectionById
      description: returns details for a collection
      parameters:
        - in: path
          name: id
          description: id of record to look up
          required: true
          schema:
            type: string
      responses:
        "200":
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Collection"
        "400":
          description: bad input parameter
  /collection/:
    post:
      tags:
        - collection
      summary: adds a new collection
      operationId: addCollection
      description: Adds a new collection
      responses:
        "201":
          description: collection created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Collection"
        "400":
          description: "invalid input, object invalid"
        "409":
          description: an existing collection already exists
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CollectionInput"
        description: Collection to create
  /item/{id}:
    get:
      tags:
        - item
      parameters:
        - in: path
          name: id
          description: id of record to look up
          required: true
          schema:
            type: string
      responses:
        "200":
          description: item matching input id
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Item"
    put:
      tags:
        - item
      parameters:
        - in: path
          name: id
          description: id of record to update
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ItemInput"
      responses:
        "200":
          description: updated item
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Item"
components:
  schemas:
    Collection:
      type: object
      required:
        - id
        - items
      properties:
        id:
          type: string
          format: uuid
        items:
          type: array
          items:
            $ref: "#/components/schemas/Item"
        createdDate:
          type: string
          format: date-time
    CollectionInput:
      type: object
      required:
        - items
      properties:
        items:
          type: array
          items:
            properties:
              id:
                type: string
                format: uuid
    Item:
      required:
        - id
        - name
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          example: Kush OG
        strain:
          type: string
      type: object
    ItemInput:
      required:
        - name
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          example: Kush OG
        strain:
          type: string

      type: object
