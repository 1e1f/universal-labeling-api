openapi: 3.0.0
info:
  description: Sample API for Universal QR Codes
  version: "1.0.0"
  title: Universal QR Code API
  contact:
    email: engineering@nabis.com
tags:
  - name: collection
    description: Information and updating of collections
  - name: item
    description: Information and updating items
  - name: product
    description: Information about product details
paths:
  /collection/{id}:
    get:
      tags:
        - collection
      summary: get info about a collection
      operationId: getCollectionById
      description: returns details for a collection
      parameters:
        - in: path
          name: id
          description: id of record to look up
          required: true
          schema:
            type: string
      responses:
        "200":
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Collection"
        "400":
          description: bad input parameter
  /collection/:
    post:
      tags:
        - collection
      summary: adds a new collection
      operationId: addCollection
      description: Adds a new collection
      responses:
        "201":
          description: collection created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Collection"
        "400":
          description: "invalid input, object invalid"
        "409":
          description: an existing collection already exists
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CollectionInput"
        description: Collection to create
  /item/{id}:
    get:
      tags:
        - item
      parameters:
        - in: path
          name: id
          description: id of record to look up
          required: true
          schema:
            type: string
      responses:
        "200":
          description: item matching input id
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Item"
    put:
      tags:
        - item
      parameters:
        - in: path
          name: id
          description: id of record to update
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Item"
      responses:
        "200":
          description: updated item
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Item"
components:
  schemas:
    UuidArray:
      type: array
      items:
        type: string
        format: uuid
    CollectionNoItemsArray:
      type: object
      required:
        - identifier
        - items
        - name
      properties:
        id:
          type: string
          format: uuid
        identifier:
          type: string
          description: Metrc Id / Batch Id / Case Id
        name:
          type: string
          description: Name for your collection
        createdDate:
          type: string
          format: date-time
        collectionType:
          type: string
          enum: ["collection", "manifest", "order", "package", "regulator"]
    CollectionInput:
      type: object
      allOf:
        - $ref: "#/components/schemas/CollectionNoItemsArray"
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/UuidArray"
    Collection:
      type: object
      properties:
        id:
          type: string
          format: uuid
        createdDate:
          type: string
          format: date-time
      allOf:
        - $ref: "#/components/schemas/CollectionInput"

    ItemInput:
      required:
        - name
      properties:
        productId:
          type: string
          format: uuid
        batchCollection:
          type: array
          description: Collection of items that make up the batch that this item is a part of
          items:
            $ref: "#/components/schemas/CollectionNoItemsArray"
        regulatorCollection:
          type: array
          description: Collection of items that make up the metrc tags / regulator IDs that this item is a part of
          items:
            $ref: "#/components/schemas/CollectionNoItemsArray"
        caseCollection:
          type: array
          description: Collection of cases that this item is a part of
          items:
            $ref: "#/components/schemas/CollectionNoItemsArray"
      type: object
    Item:
      required:
        - name
        - id
      allOf:
        - $ref: "#/components/schemas/ItemInput"
      properties:
        id:
          type: string
          format: uuid
        createdDate:
          type: string
          format: date-time
      type: object
    Product:
      required:
        - id
        - name
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          example: Kush OG
        strain:
          type: string
      type: object
